# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h8lGu7m6Pb3086u7BO7BI68tJ891JZHB
"""

from scipy.cluster.hierarchy import dendrogram, linkage
import seaborn as sns
import pandas as pd
from matplotlib import pyplot as plt
import plotly.express as px
from sklearn.preprocessing import LabelEncoder

#wykonanie dendrogramu oraz mapy cieplnej celem sprawdzenia czy zmierzone parametry zebrane w zbiorze danych pozwalają na detekcję skupień wśród badanych rodzajów kaw

#wczytanie danych
df = pd.read_csv("kawa.txt", delim_whitespace=True, header=0)
print(df.head())
 
#zamiana na zapis liczbowy
le = LabelEncoder()
df_copy = df.copy()
df_copy['Kawa'] = le.fit_transform(df_copy['Kawa']) 
print(df_copy)
 
#sprawdzenie jak parametry rozkładają się w grupach dla poszczególnych #przypadków
fig = px.parallel_coordinates(df_copy, dimensions=df_copy.columns[1:12], color='Kawa')
fig.show()

df = df.set_index('Kawa')
#usuwanie parametrów nie wnoszących informacji o podziale
del df['Zn']
del df['K']
del df['Ba']
del df['Sr']
 
#wybór metody i metryki
Z = linkage(df.values, method='complete', metric='euclidean') 

#wybór parametrów dla dendrogramu
d = dendrogram(Z, labels=df.index, leaf_rotation=1, color_threshold=4,
   above_threshold_color='gray')
plt.xlabel('Sample index')
plt.ylabel('Distance')
 
#wybór metryki, metody i z_score dla mapy cieplnej
sns.clustermap(df, metric="euclidean", method="complete",
   cmap="Greens", z_score=1)